{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fet } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/austinhill/Development/_Pojects/royal-sky/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fet","ShopActionTypes","fetchCollectionsAsync","console","log","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,SACEC,uBADF,EAEEC,GAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACY,cAAD,CAAxB,CAAR;AACD,KALH,EAMGC,KANH,CAMSC,KAAK,IAAIR,QAAQ,CAACS,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN1B;AAOD,GAVD;AAWD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMpB,SAAS,CACbK,eAAe,CAACgB,uBADH,EAEbf,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects'\n\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nimport {\n  fetchCollectionsSuccess,\n  fet\n} from './shop.actions'\n\nimport ShopActionTypes from './shop.types'\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired')\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef\n      .get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  )\n}"]},"metadata":{},"sourceType":"module"}