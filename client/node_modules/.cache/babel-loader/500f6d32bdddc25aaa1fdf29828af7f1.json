{"ast":null,"code":"var _jsxFileName = \"/Users/austinhill/Development/_Pojects/royal-sky/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStartAsync,\n  isCollectionFetching\n}) => {\n  const [loading, setLoading] = useState(true);\n  const unsubscribeFromSnapshot = null;\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: isCollectionFetching\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 63\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isCollectionFetching\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 71\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/austinhill/Development/_Pojects/royal-sky/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","useState","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isCollectionFetching","loading","setLoading","unsubscribeFromSnapshot","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA0C,iCAA1C;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACF,mBAAD,CAAjD;AACA,MAAMQ,yBAAyB,GAAGN,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMQ,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASL,EAAAA,0BAAT;AAAqCM,EAAAA;AAArC,CAAD,KAAiE;AAChF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMkB,uBAAuB,GAAG,IAAhC;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,0BAA0B;AAC3B,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEK,KAAK,CAACK,IAAK,EAAjC;AAAoC,IAAA,MAAM,EAAGC,KAAD,iBAAY,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAEL;AAA1C,OAAoEK,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEN,KAAK,CAACK,IAAK,gBAA3B;AAA4C,IAAA,MAAM,EAAGC,KAAD,iBAAY,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEL;AAAtC,OAAgEK,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF;AAOD,CAfD;;AAiBA,MAAMC,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CY,EAAAA,oBAAoB,EAAEL;AADyB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAAD;AADF,CAAf,CAA3B;;AAIA,eAAeP,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\n\nimport CollectionsOverview from '../../components/collections-overview/collection-overview.component'\nimport CollectionPage from '../collection/collection.component'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util'\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching} from '../../redux/shop/shop.selectors'\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nconst ShopPage = ({ match, fetchCollectionsStartAsync, isCollectionFetching }) => {\n  const [loading, setLoading] = useState(true)\n  const unsubscribeFromSnapshot = null;\n\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, [])\n\n  return (\n\n    <div className='shop-page'>\n      <Route exact path={`${match.path}`} render={(props) => (<CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props} />)} />\n      <Route path={`${match.path}/:collectionId`} render={(props) => (<CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />)} />\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}