{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsAsync, fetchCollectionsStart } from './shop/shop.sagas';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store); // const store = createStore(\n//   reducer, /* preloadedState, */\n// +  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );","map":{"version":3,"sources":["/Users/austinhill/Development/_Pojects/royal-sky/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsAsync","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAAQC,qBAAR,EAA+BC,qBAA/B,QAA2D,mBAA3D;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA2C;AACzCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACO,WAAD,EAAcN,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,qBAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA9B,C,CACP;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\nimport logger from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\n\nimport {fetchCollectionsAsync, fetchCollectionsStart} from './shop/shop.sagas'\n\nimport rootReducer from './root-reducer'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst middlewares = [sagaMiddleware]\n\nif(process.env.NODE_ENV === 'development') {\n  middlewares.push(logger)\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(fetchCollectionsStart)\n\nexport const persistor = persistStore(store)\n// const store = createStore(\n//   reducer, /* preloadedState, */\n// +  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );"]},"metadata":{},"sourceType":"module"}