{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSucceess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSucceess(collectionsMap));\n    }).catch(err => dispatch(fetchCollectionsFailure()));\n  };\n};","map":{"version":3,"sources":["/Users/austinhill/Development/_Pojects/royal-sky/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSucceess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","onSnapshot","snapshot","catch","err"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADkC,CAArB,CAA9B;AAIP,OAAO,MAAMC,wBAAwB,GAAGH,cAAc,KAAK;AACzDC,EAAAA,IAAI,EAAEL,eAAe,CAACQ,yBADmC;AAEzDC,EAAAA,OAAO,EAAEL;AAFgD,CAAL,CAA/C;AAKP,OAAO,MAAMM,uBAAuB,GAAGC,YAAY,KAAK;AACtDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMd,cAAc,GAAGF,+BAA+B,CAACgB,QAAD,CAAtD;AACAJ,MAAAA,QAAQ,CAACP,wBAAwB,CAACH,cAAD,CAAzB,CAAR;AACD,KAHD,EAGGe,KAHH,CAGSC,GAAG,IAAIN,QAAQ,CAACJ,uBAAuB,EAAxB,CAHxB;AAID,GATD;AAUD,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util'\n\nexport const fetchCollectionsStart = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsSucceess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections')\n\n    dispatch(fetchCollectionsStart())\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      dispatch(fetchCollectionsSucceess(collectionsMap))\n    }).catch(err => dispatch(fetchCollectionsFailure()))\n  }\n}"]},"metadata":{},"sourceType":"module"}