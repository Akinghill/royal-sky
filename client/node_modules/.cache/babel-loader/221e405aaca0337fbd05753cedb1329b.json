{"ast":null,"code":"var _jsxFileName = \"/Users/austinhill/Development/_Pojects/royal-sky/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  updateCollections\n}) => {\n  const [loading, setLoading] = useState(true);\n  const unsubscribeFromSnapshot = null;\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/austinhill/Development/_Pojects/royal-sky/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","useState","Route","connect","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","loading","setLoading","unsubscribeFromSnapshot","collectionRef","collection","onSnapshot","snapshot","collectionsMap","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACF,mBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMO,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASJ,EAAAA;AAAT,CAAD,KAAkC;AACjD,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMe,uBAAuB,GAAG,IAAhC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAX,MAAAA,iBAAiB,CAACY,cAAD,CAAjB;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACS,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAElB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAES,KAAK,CAACS,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEjB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAnBD;;AAqBA,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,iBAAiB,EAAEY,cAAc,IAAIG,QAAQ,CAACf,iBAAiB,CAACY,cAAD,CAAlB;AADL,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCX,QAAlC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport CollectionsOverview from '../../components/collections-overview/collection-overview.component'\nimport CollectionPage from '../collection/collection.component'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util'\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nconst ShopPage = ({ match, updateCollections }) => {\n  const [loading, setLoading] = useState(true)\n  const unsubscribeFromSnapshot = null;\n\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections')\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      updateCollections(collectionsMap)\n      setLoading(false)\n    })\n  }, [])\n\n  return (\n    <div className='shop-page'>\n      <Route exact path={`${match.path}`} component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}